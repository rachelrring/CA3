@page "/"
@inject HttpClient Http
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.Components.QuickGrid

<PageTitle>Breweries</PageTitle>

@if (FilteredCounties != null)
{
    <div class="card mx-auto" style="width: 75%;">
        <h3>Breweries in @countyFilter</h3>
        <div class="list-group list-group-flush">
            @if (counties != null)
            {
                <div class="list-group-item container">
                    <div class="row">
                        <div class="col-sm">
                            Country:
                            <select @bind="@countyFilter">
                                <option>All Counties</option>
                                @foreach (var c in counties)
                                {
                                    <option>@c</option>
                                }
							</select>
						</div>
                        <div class="col-sm">
                            Items per page:
                            <select @bind="@pagination.ItemsPerPage">
                                <option>5</option>
                                <option>10</option>
                                <option>20</option>
                                <option>50</option>
                            </select>
                        </div>
                    </div>
                </div>
            }
            <div class="list-group-item row" style="width:100%;">
                <QuickGrid Items="@FilteredCounties" Pagination="@pagination" class="card-body">
                    <PropertyColumn Property="@(p => p.name)" Sortable="true" Title="Brewery Name" class="col" />
                    <PropertyColumn Property="@(p => p.state_province)" Title="County" class="col" />
                    <PropertyColumn Property="@(p => p.brewery_type)" Title="Brewery Type" class="col" />
                    <TemplateColumn class="col">
                        <button class="btn btn-outline-primary" @onclick="@(() => navigateAway(context.id))">More details</button>
                    </TemplateColumn>
				</QuickGrid>
			</div>
            <Paginator State="@pagination" />
        </div>
    </div>
}

@code {
    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };
    private IQueryable<Brewery>? data;
    private string countyFilter { get; set; } = "All Counties";
    private IQueryable<string>? counties;

    IQueryable<Brewery> FilteredCounties
    {
        get
        {
            if (countyFilter == "All Counties")
            {
                return data;
            }
            return data.Where(d => d.state_province == countyFilter);
        }
    }



    protected override async Task OnInitializedAsync()
    {
        try
        {
            var items = await Http.GetFromJsonAsync<Brewery[]>("https://api.openbrewerydb.org/v1/breweries?by_country=ireland");
            data = items.AsQueryable();
            counties = data.Select(d => d.state_province).Where(d =>!string.IsNullOrEmpty(d)).Distinct();
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
            throw e;
        }

    }

    public void navigateAway(string name) => Navigation.NavigateTo("brewery/" + name);

    public class Brewery
    {
        public string id { get; set; }
        public string name { get; set; }
        public string brewery_type { get; set; }
        public string address_1 { get; set; }
        public string? address_2 { get; set; }
        public string? address_3 { get; set; }
        public string city { get; set; }
        public string state_province { get; set; }
        public string postal_code { get; set; }
        public string country { get; set; }
        public string longitude { get; set; }
        public string latitude { get; set; }
        public string phone { get; set; }
        public string website_url { get; set; }
        public string state { get; set; }
        public string street { get; set; }
    }
}